let map;const markers=[];const openInfoWindows=[];function showOverlay(){const overlay=document.getElementById("overlay");overlay.style.display="flex";updateProgress(0)}function hideOverlay(){const overlay=document.getElementById("overlay");overlay.style.display="none"}function updateProgress(percentage){const progressBlock=document.getElementById("progressBlock");let numElement=progressBlock.querySelector(".num");let num=parseInt(numElement.innerText);let circle=progressBlock.querySelector(".progress-circle");uploadPercentage=Math.round(percentage);numElement.innerText=uploadPercentage;circle.style.strokeDashoffset=503-503*(num/100);let dots=progressBlock.querySelector(".progress-dots");dots.style.transform=`rotate(${360*(num/100)}deg)`;if(num==100){dots.style.opacity=0}}function initMap(){document.getElementById("uploadButton").addEventListener("change",handleFileSelect,false);map=new google.maps.Map(document.getElementById("map"));map.setTilt(0);setMapToUS()}function setMapToUS(){const bounds=new google.maps.LatLngBounds(new google.maps.LatLng(24.396308,-125),new google.maps.LatLng(49.384358,-66.93457));map.fitBounds(bounds)}function calculateBoundingBox(markers){const bounds=new google.maps.LatLngBounds;for(const marker of markers){bounds.extend(marker.getPosition())}return bounds}function fitBounds(bounds){map.fitBounds(bounds);map.setZoom(map.getZoom()-3)}function handleFileSelect(evt){const files=evt.target.files;console.log("Number of selected files: "+files.length);if(files.length===0){alert("Please select one or more JPG images.");return}clearMarkers();let notSupportedPhotoDetected=false;let uploadedPhotos=0;const totalPhotos=files.length;showOverlay();for(const file of files){if(file.type==="image/jpeg"){const reader=new FileReader;reader.onload=function(e){const img=new Image;img.src=e.target.result;img.onload=function(){if(!notSupportedPhotoDetected){EXIF.getData(img,function(){const software=EXIF.getTag(this,"Software");const copyright=EXIF.getTag(this,"Copyright");if(software==="Omesa Camera"&&copyright==="OMESA DATA GROUP LLC"){const lat=EXIF.getTag(this,"GPSLatitude");const lon=EXIF.getTag(this,"GPSLongitude");const latRef=EXIF.getTag(this,"GPSLatitudeRef");const lonRef=EXIF.getTag(this,"GPSLongitudeRef");if(lat&&lon&&latRef&&lonRef){const latitude=calculateCoordinateWithPrecision(lat,latRef);const longitude=calculateCoordinateWithPrecision(lon,lonRef);if(isNaN(latitude)||isNaN(longitude)){const errorMessage=`GPS coordinates could not be parsed from EXIF in file ${file.name}.`;console.error(errorMessage);displayErrorModal(errorMessage)}else{addPinToMap(latitude,longitude,file,files.length)}}else{const errorMessage=`GPS coordinates not found in ${file.name}.`;console.error(errorMessage);displayErrorModal(errorMessage)}}else{if(!notSupportedPhotoDetected){const errorMessage="OmesaView works with Omesa photos only.";console.error(errorMessage);displayErrorModal(errorMessage)}notSupportedPhotoDetected=true}})}uploadedPhotos++;const uploadPercentage=uploadedPhotos/totalPhotos*100;updateProgress(uploadPercentage);if(uploadedPhotos===totalPhotos){hideOverlay()}}};reader.readAsDataURL(file)}else{alert(`Skipping ${file.name}. Please select JPG images only.`)}}}let markersAdded=0;function clearMarkers(){for(const marker of markers){marker.setMap(null)}markers.length=0;markersAdded=0}function displayErrorModal(errorMessage){const modal=document.getElementById("errorModal");const errorMessageElement=document.getElementById("errorMessage");errorMessageElement.textContent=errorMessage;modal.style.display="block"}function closeErrorModal(){const modal=document.getElementById("errorModal");modal.style.display="none"}function addPinToMap(latitude,longitude,photoFile,photoCnt){const position={lat:latitude,lng:longitude};const customIcon={url:"omesa_pin.png",scaledSize:new google.maps.Size(25,40),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(20,40)};const marker=new google.maps.Marker({position:position,map:map,icon:customIcon});markers.push(marker);const fileName=photoFile.name;const infowindow=new google.maps.InfoWindow({content:`
      <div class="infowindow-content">
        <h3>${fileName}</h3>
        <div class="image-container">
          <a href="${URL.createObjectURL(photoFile)}" data-lightbox="image"  data-title="Uploaded Photo ${fileName}">
            <img src="${URL.createObjectURL(photoFile)}" alt="Uploaded Photo ${fileName}" class="info-window-image" />
          </a>
        </div>

        <div class="click-text">
          <p style="margin-top: 10px; margin-bottom: 10px; font-style: italic;text-align: center;">Click on photo for full-screen</p>
        </div>
      </div>`});marker.addListener("click",()=>{closeAllInfoWindows();infowindow.open(marker.get("map"),marker);openInfoWindows.push(infowindow)},{passive:true});markersAdded++;if(markersAdded===photoCnt){const bounds=calculateBoundingBox(markers);fitBounds(bounds);resizeMap()}}function closeAllInfoWindows(){openInfoWindows.forEach(infoWindow=>{infoWindow.close()});openInfoWindows.length=0}function calculateCoordinate(coordArray,coordRef){let degrees=coordArray[0];let minutes=coordArray[1];let seconds=coordArray[2];let coordinate=degrees+minutes/60+seconds/(60*60);if(coordRef==="S"||coordRef==="W"){coordinate=-coordinate}return coordinate}function calculateCoordinateWithPrecision(coordinate,coordinateRef){const[degrees,minutes,seconds]=coordinate;let decimalCoordinate=degrees+minutes/60+seconds/3600;if(coordinateRef==="S"||coordinateRef==="W"){decimalCoordinate=-decimalCoordinate}return parseFloat(decimalCoordinate.toFixed(10))}function resizeMap(){const center=map.getCenter();google.maps.event.trigger(map,"resize");map.setCenter(center)}function progressTest(totalPhotos){const block=document.querySelectorAll(".block");block.forEach(item=>{let numElement=item.querySelector(".num");let num=parseInt(numElement.innerText);let uploadedPhotos=0;let time=2e3/num;let circle=item.querySelector(".circle");setInterval(()=>{if(uploadedPhotos==totalPhotos){clearInterval();hideOverlay()}else{uploadedPhotos+=1;uploadPercentage=Math.round(uploadedPhotos/totalPhotos*100);numElement.innerText=uploadPercentage}},time);circle.style.strokeDashoffset=503-503*(num/100);let dots=item.querySelector(".dots");dots.style.transform=`rotate(${360*(num/100)}deg)`;if(num==100){dots.style.opacity=0}})}window.addEventListener("resize",resizeMap);